{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCGA,IAAM,EAAU,EAAG,SAAS,gBAAgB,CAAC,gBACvC,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAiB,EAAG,SAAS,gBAAgB,CAAC,aAEpD,EAAO,OAAO,CAAC,SAAC,CAAA,CAAO,CAAvB,EACE,EAAM,gBAAgB,CAAC,QAAS,WAC9B,IAAM,EAAS,EAAc,IAAI,CAAC,SAAC,CAAA,CAAG,CAAtC,EACE,IAAM,EAAS,EACZ,aAAa,CAAC,eAAyB,MAAA,CAAV,EAAQ,EAAE,MACvC,WAAW,CAAC,KAAK,CAAC,KAClB,IAAI,CAAC,IACL,UAAU,CAAC,IAAK,IACb,EAAS,EACZ,aAAa,CAAC,eAAyB,MAAA,CAAV,EAAQ,EAAE,MACvC,WAAW,CAAC,KAAK,CAAC,KAClB,IAAI,CAAC,IACL,UAAU,CAAC,IAAK,WAEnB,AAAI,AAAC,MAAM,WAAW,KAAa,MAAM,WAAW,IAI7C,EAAO,aAAa,CAAC,GAHnB,WAAW,GAAU,WAAW,EAI3C,EAEA,CAAA,EAAM,SAAS,CAAG,GAClB,EAAO,OAAO,CAAC,SAAC,CAAhB,EAAuB,OAAA,EAAM,MAAM,CAAC,E,EACtC,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\nvar theads = _to_consumable_array(document.querySelectorAll(\"thead tr th\"));\nvar tbody = document.querySelector(\"tbody\");\nvar tbodyChildren = _to_consumable_array(document.querySelectorAll(\"tbody tr\"));\ntheads.forEach(function(thead, index) {\n    thead.addEventListener(\"click\", function() {\n        var sorted = tbodyChildren.sort(function(a, b) {\n            var valueA = a.querySelector(\"*:nth-child(\".concat(index + 1, \")\")).textContent.split(\" \").join(\"\").replaceAll(\"$\", \"\");\n            var valueB = b.querySelector(\"*:nth-child(\".concat(index + 1, \")\")).textContent.split(\" \").join(\"\").replaceAll(\"$\", \"\");\n            if (!isNaN(parseFloat(valueA)) && !isNaN(parseFloat(valueB))) return parseFloat(valueA) - parseFloat(valueB);\n            return valueA.localeCompare(valueB);\n        });\n        tbody.innerHTML = \"\";\n        sorted.forEach(function(el) {\n            return tbody.append(el);\n        });\n    });\n});\n\n//# sourceMappingURL=index.d323b3ea.js.map\n","'use strict';\n\n// write code here\nconst theads = [...document.querySelectorAll('thead tr th')];\nconst tbody = document.querySelector('tbody');\nconst tbodyChildren = [...document.querySelectorAll('tbody tr')];\n\ntheads.forEach((thead, index) => {\n  thead.addEventListener('click', () => {\n    const sorted = tbodyChildren.sort((a, b) => {\n      const valueA = a\n        .querySelector(`*:nth-child(${index + 1})`)\n        .textContent.split(' ')\n        .join('')\n        .replaceAll('$', '');\n      const valueB = b\n        .querySelector(`*:nth-child(${index + 1})`)\n        .textContent.split(' ')\n        .join('')\n        .replaceAll('$', '');\n\n      if (!isNaN(parseFloat(valueA)) && !isNaN(parseFloat(valueB))) {\n        return parseFloat(valueA) - parseFloat(valueB);\n      }\n\n      return valueA.localeCompare(valueB);\n    });\n\n    tbody.innerHTML = '';\n    sorted.forEach((el) => tbody.append(el));\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","theads","document","querySelectorAll","tbody","querySelector","tbodyChildren","forEach","thead","index","addEventListener","sorted","sort","a","b","valueA","concat","textContent","split","join","replaceAll","valueB","isNaN","parseFloat","localeCompare","innerHTML","el","append"],"version":3,"file":"index.d323b3ea.js.map"}